input {  
    kafka{
        bootstrap_servers => "kafka-broker-1.devopslearning.xyz:9092,kafka-broker-2.devopslearning.xyz:9093,kafka-broker-3.devopslearning.xyz:9094"
        group_id => "nexus"
        client_id => "nexus1"
        consumer_threads => 3
        topics => ["nexus-audit-logs"]
        type => "audit"
        security_protocol => "SSL"
        ssl_key_password => "{{ kafka_ssl_password }}"
	ssl_keystore_location => "/etc/logstash/ssl/kafka_ssl/client.keystore.jks"
	ssl_keystore_password => "{{ kafka_ssl_password }}"
	ssl_truststore_location => "/etc/logstash/ssl/kafka_ssl/client.truststore.jks"
	ssl_truststore_password => "{{ kafka_ssl_password }}"
        ssl_endpoint_identification_algorithm => " "
    }
    kafka{
        bootstrap_servers => "kafka-broker-1.devopslearning.xyz:9092,kafka-broker-2.devopslearning.xyz:9093,kafka-broker-3.devopslearning.xyz:9094"
        group_id => "nexus"
        client_id => "nexus2"
        consumer_threads => 3
        topics => ["nexus-cleanup-logs"]
        type => "cleanup"
        security_protocol => "SSL"
        ssl_key_password => "{{ kafka_ssl_password }}"
        ssl_keystore_location => "/etc/logstash/ssl/kafka_ssl/client.keystore.jks"
        ssl_keystore_password => "{{ kafka_ssl_password }}"
        ssl_truststore_location => "/etc/logstash/ssl/kafka_ssl/client.truststore.jks"
        ssl_truststore_password => "{{ kafka_ssl_password }}"
        ssl_endpoint_identification_algorithm => " "
    }
    kafka{
        bootstrap_servers => "kafka-broker-1.devopslearning.xyz:9092,kafka-broker-2.devopslearning.xyz:9093,kafka-broker-3.devopslearning.xyz:9094"
        group_id => "nexus"
        client_id => "nexus3"
        consumer_threads => 3
        topics => ["nexus-request-logs"]
        type => "request"
        security_protocol => "SSL"
        ssl_key_password => "{{ kafka_ssl_password }}"
        ssl_keystore_location => "/etc/logstash/ssl/kafka_ssl/client.keystore.jks"
        ssl_keystore_password => "{{ kafka_ssl_password }}"
        ssl_truststore_location => "/etc/logstash/ssl/kafka_ssl/client.truststore.jks"
        ssl_truststore_password => "{{ kafka_ssl_password }}"
        ssl_endpoint_identification_algorithm => " "
    }
}

filter {
    if [type] == "audit" {
        grok{
           match => {"message"=>"%{SYSLOGHOST:hostname}(?<json>[^~]*)"}
        }
        json {
           source => "json"
        }
        mutate{
           rename => {
                "[attributes][.name]"=>"[attributes][name]"
                "[attributes][.id]"=>"[attributes][id]"
                "[attributes][.updated]"=>"[attributes][updated]"
                "[attributes][.typeId]"=>"[attributes][typeId]"
                "[attributes][.visible]"=>"[attributes][visible]"
                "[attributes][.created]"=>"[attributes][created]"
                "[attributes][.message]"=>"[attributes][message]"
                "[attributes][.recoverable]"=>"[attributes][recoverable]"
                "[attributes][.typeName]"=>"[attributes][typeName]"
           }
           remove_field => [ "message", "json" ]
           rename => {
                "[attributes][lastRunState]"=>"[attributes][last_run_state]"
                "[attributes][currentState]"=>"[attributes][current_state]"
           }
        }    
    }
    if [type] == "cleanup" {
        grok{
           match => { "message" => "%{USERNAME:hostname}%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{WORD:severity}%{SPACE}%{SYSLOG5424SD:thread}(?<response>[^~]*)" }
        }
        mutate{
             remove_field => [ "message" ]
        }
    }
    if [type] == "request" {
        mutate {
             gsub => [ "message", "\"", "" ]
        }
        grok{
           match => { "message" => "%{URIHOST:hostname} %{IP:client_ip} - - %{SYSLOG5424SD:timestamp} %{WORD:method} %{URIPATHPARAM:uri_path} %{DATA:protocol} %{DATA:response} (?<drop_field>.*?(?=[A-Z]))%{DATA:user_agent} (?<request_message>.*)" }
        }
        mutate{
             remove_field => [ "message", "drop_field" ]
        }
    }
}


output {
    if [type] == "audit" {
         elasticsearch {
             hosts => "https://devopslearning.xyz:9200"
             user => "elastic"
             password => "{{ elk_password }}"
             ssl => true
             ssl_certificate_verification => true
             cacert => "/etc/ssl/certs/ca-certificates.crt"
             index => "nexus-audit-logs"
             codec => "json"
         }
    } 
    if [type] == "cleanup" {
         elasticsearch {
             hosts => "https://devopslearning.xyz:9200"
             user => "elastic"
             password => "{{ elk_password }}"
             ssl => true
             ssl_certificate_verification => true
             cacert => "/etc/ssl/certs/ca-certificates.crt"
             index => "nexus-cleanup-logs"
             codec => "json"
         }
    }
    if [type] == "request" {
         elasticsearch {
             hosts => "https://devopslearning.xyz:9200"
             user => "elastic"
             password => "{{ elk_password }}"
             ssl => true
             ssl_certificate_verification => true
             cacert => "/etc/ssl/certs/ca-certificates.crt"
             index => "nexus-request-logs"
             codec => "json"
         }
    }
}
